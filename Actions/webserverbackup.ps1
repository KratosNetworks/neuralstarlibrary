# Powershell 1
#[void][reflection.assembly]::LoadFrom("D:\work\NeuralStar\Services\EventService\bin\Debug\BusinessObject.dll");

# Powershell 2
Add-Type -Path "D:\work\NeuralStar\Services\EventService\bin\Debug\BusinessObject.dll"

# Runls - the backup script on the remote host
plink -i D:\temp\joshuatest.ppk root@joshuatest -m webserverbackup.commands > joshua.log.txt

# Copy the backup file to the local host (if it was successful)
pscp -i D:\temp\joshuatest.ppk root@joshuatest:/var/backups/websitebackup.tar.gz d:\temp

# Copy the backup log to the web server log directory
Move-Item joshua.log.txt D:\work\NeuralStar\Clients\WebClient\logs -force

# Create the alarm in neuralstar pointing to the backup log
$user = [AiMetrix.BusinessObject.Security.User]::Login("test", "test")

$nsobjectID = New-Object System.Guid("4c552806-1a45-e011-bb69-005056c00008")
$alarmseverity = [AiMetrix.BusinessObject.Alarms.Alarm+AlarmSeverity]::Critical

$alarm = New-Object AiMetrix.BusinessObject.Alarms.Alarm("Server Backup", $alarmseverity, $alarmseverity.ToString())
$alarm.Description = "This error description has been generated by a script. Click here to see the log <link>http://dopplervuethinclient/logs/joshua.log.txt</link>"
[void]$alarm.Save($nsobjectID)

[void][AiMetrix.BusinessObject.Security.User]::Logout();

# DEBUGGING - Please ignore. Move along. Nothing to see here
#function Match-Type ($Name)
#{  [Appdomain]::CurrentDomain.GetAssemblies() |
#       foreach {$_.GetExportedTypes()} |
#          where {$_.FullName -match $Name}
#}

#[appdomain]::currentdomain.getassemblies() | sort -property fullname | format-table fullname
#Match-Type alarm |ft FullName

#Get-WMIObject Win32_Volume -filter "DriveType=3" -computer "ranger" | Select SystemName, Caption, Label, @{Name="size(GB)";Expression={"{0:N1}" -f($_.capacity/1gb)}},@{Name="freespace(GB)";Expression={"{0:N1}" -f($_.freespace/1gb)}}
# DEBUGGING